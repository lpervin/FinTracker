// <auto-generated />
using System;
using FinTracker.Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fintracker.Domain.Migrations
{
    [DbContext(typeof(FinTrackerContext))]
    [Migration("20200725014027_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinTracker.Domain.Models.FinSecurity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("LastPrice")
                        .HasColumnType("decimal(16, 4)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(1500)")
                        .HasMaxLength(1500);

                    b.Property<string>("SecurityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("FinSecurity");
                });

            modelBuilder.Entity("FinTracker.Domain.Models.FinSecurityPriceHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Adj")
                        .HasColumnType("decimal(16, 4)");

                    b.Property<decimal?>("Close")
                        .HasColumnType("decimal(16, 4)");

                    b.Property<decimal?>("High")
                        .HasColumnType("decimal(16, 4)");

                    b.Property<decimal?>("Low")
                        .HasColumnType("decimal(16, 4)");

                    b.Property<decimal?>("Open")
                        .HasColumnType("decimal(14, 6)");

                    b.Property<long>("SecurityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TradeDate")
                        .HasColumnType("date");

                    b.Property<long?>("Volume")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("FinSecurityPriceHistory_pk")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("FinSecurityPriceHistory_Id_uindex");

                    b.HasIndex("SecurityId");

                    b.ToTable("FinSecurityPriceHistory");
                });

            modelBuilder.Entity("FinTracker.Domain.Models.PortfolioComposition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CostBasis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(16, 4)")
                        .HasDefaultValueSql("((0.0))");

                    b.Property<decimal?>("CurrentMarketValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(16, 4)")
                        .HasDefaultValueSql("((0.0))");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<long>("FinSecurityId")
                        .HasColumnType("bigint");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(16, 4)");

                    b.Property<decimal>("Units")
                        .HasColumnType("decimal(16, 4)");

                    b.HasKey("Id");

                    b.HasIndex("FinSecurityId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("PortfolioComposition");
                });

            modelBuilder.Entity("FinTracker.Domain.Models.Portfolios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("InvestmentStrategy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Portfolios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 7, 24, 21, 40, 26, 813, DateTimeKind.Local).AddTicks(7620),
                            Description = "Default Portfolio",
                            InvestmentStrategy = "Conservative",
                            Name = "Default"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 7, 24, 21, 40, 26, 827, DateTimeKind.Local).AddTicks(4130),
                            Description = "Moderate Portfolio",
                            InvestmentStrategy = "Moderate",
                            Name = "Moderate"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 7, 24, 21, 40, 26, 827, DateTimeKind.Local).AddTicks(4170),
                            Description = "Aggressive Portfolio",
                            InvestmentStrategy = "Aggressive",
                            Name = "Aggressive"
                        });
                });

            modelBuilder.Entity("FinTracker.Domain.Models.FinSecurityPriceHistory", b =>
                {
                    b.HasOne("FinTracker.Domain.Models.FinSecurity", "Security")
                        .WithMany("FinSecurityPriceHistory")
                        .HasForeignKey("SecurityId")
                        .HasConstraintName("FinSecurityPriceHistory_FinSecurity__fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinTracker.Domain.Models.PortfolioComposition", b =>
                {
                    b.HasOne("FinTracker.Domain.Models.FinSecurity", "FinSecurity")
                        .WithMany("PortfolioComposition")
                        .HasForeignKey("FinSecurityId")
                        .HasConstraintName("FK_PortfolioComposition_FinSecurity")
                        .IsRequired();

                    b.HasOne("FinTracker.Domain.Models.Portfolios", "Portfolio")
                        .WithMany("PortfolioComposition")
                        .HasForeignKey("PortfolioId")
                        .HasConstraintName("FK_PortfolioComposition_Portfolio")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
